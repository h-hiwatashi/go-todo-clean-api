openapi: 3.0.0
info:
  title: Todo API
  description: API for managing todo items
  version: 1.0.0
  contact:
    name: h-hiwatashi
servers:
  - url: http://localhost:8080
    description: Development server
tags:
  - name: Todo
    description: Todo Operation
  - name: Comment
    description: Comment Operation
paths:
  /hello:
    get:
      operationId: getHello
      summary: Returns hello message
      tags:
        - Todo
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
  /todo:
    post:
      operationId: createTodo
      summary: Create a new todo
      tags:
        - Todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /todo/list:
    get:
      operationId: getTodoList
      summary: Get a list of todos
      tags:
        - Todo
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
          description: The page number to retrieve
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
          description: The number of items per page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
  /todo/{id}:
    get:
      operationId: getTodoById
      summary: Get a todo by ID
      tags:
        - Todo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: deleteTodo
      summary: Delete a todo
      tags:
        - Todo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /todo/nice:
    post:
      operationId: incrementNice
      summary: Increment nice count for a todo
      tags:
        - Todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoNiceRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /comment:
    post:
      operationId: createComment
      summary: Create a new comment
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    TodoRequest:
      type: object
      required:
        - title
        - contents
        - username
      properties:
        title:
          type: string
        contents:
          type: string
        username:
          type: string
    TodoNiceRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    Todo:
      type: object
      required:
        - id
        - title
        - contents
        - username
        - nice_num
      properties:
        id:
          type: integer
        title:
          type: string
        contents:
          type: string
        username:
          type: string
        nice_num:
          type: integer
    CommentRequest:
      type: object
      required:
        - article_id
        - message
      properties:
        article_id:
          type: integer
          description: ID of the article to comment on
        message:
          type: string
          description: The comment text
    Comment:
      type: object
      required:
        - id
        - article_id
        - message
        - created_at
      properties:
        id:
          type: integer
          description: Comment ID
        article_id:
          type: integer
          description: ID of the article the comment belongs to
        message:
          type: string
          description: The comment text
        created_at:
          type: string
          format: date-time
          description: Timestamp when the comment was created
    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
        code:
          type: integer
